param (
    [string]$appPoolName,
    [string]$outputXmlPath
)

function ConvertTo-XmlElement($xmlDoc, $parent, $property, $value) {
    $node = $xmlDoc.CreateElement($property)

    if ($value -is [System.Management.Automation.PSCustomObject]) {
        foreach ($childProperty in $value.PSObject.Properties) {
            ConvertTo-XmlElement $xmlDoc $node $childProperty.Name $childProperty.Value
        }
    } else {
        $node.InnerText = $value
    }

    $parent.AppendChild($node)
}

# Create an XML document
$xmlDoc = New-Object System.Xml.XmlDocument

# Create the root element
$rootNode = $xmlDoc.CreateElement("AppPoolSettings")
$xmlDoc.AppendChild($rootNode)

# Get the application pool settings
$appPool = Get-Item "IIS:\AppPools\$appPoolName"
$appPoolSettings = $appPool | Get-ItemProperty

# Create an element for the application pool settings
$appPoolNode = $xmlDoc.CreateElement("AppPool")
$xmlDoc.SelectSingleNode("//AppPoolSettings").AppendChild($appPoolNode)

# Add application pool settings to the XML
foreach ($setting in $appPoolSettings.PSObject.Properties) {
    ConvertTo-XmlElement $xmlDoc $appPoolNode $setting.Name $setting.Value
}

# Save the XML to the specified location
$xmlDoc.Save($outputXmlPath)

Write-Host "AppPool settings exported to: $outputXmlPath"
