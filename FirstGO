func UamiAzLogin(uamiID string) (string, error) {
	imdsURL := fmt.Sprintf("http://169.254.169.254/metadata/identity/oauth2/token?resource=https://management.core.windows.net/&client_id=%s&api-version=2023-07-01", uamiID)
	fmt.Println("IMDS URL: ", imdsURL) // Log the IMDS URL

	req, err := http.NewRequest("GET", imdsURL, nil)
	if err != nil {
		return "", fmt.Errorf("failed to create IMDS request: %v", err)
	}
	req.Header.Set("Metadata", "true")

	client := &http.Client{}
	resp, err := client.Do(req)
	if err != nil {
		return "", fmt.Errorf("IMDS request failed: %v", err)
	}
	defer resp.Body.Close()

	fmt.Println("IMDS Response Status: ", resp.Status) // Log the response status

	if resp.StatusCode != http.StatusOK {
		body, _ := ioutil.ReadAll(resp.Body)
		return "", fmt.Errorf("IMDS request returned status: %v, response: %s", resp.Status, string(body))
	}

	body, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		return "", fmt.Errorf("failed to read IMDS response body: %v", err)
	}

	var imdsResponse struct {
		AccessToken string `json:"access_token"`
	}
	err = json.Unmarshal(body, &imdsResponse)
	if err != nil {
		return "", fmt.Errorf("failed to unmarshal IMDS response: %v", err)
	}

	return imdsResponse.AccessToken, nil
}
