<!DOCTYPE html>
<html>
<head>
  <title>CSV Table with Filters</title>
  <style>
    table, th, td {
      border: 1px solid black;
      border-collapse: collapse;
    }
    th, td {
      padding: 5px;
    }
    input[type="text"] {
      width: 100%;
      padding: 5px;
    }
  </style>
</head>
<body>
  <h1>CSV Table with Filters</h1>
  <div id="filters"></div>
  <table id="csv-table">
    <thead></thead>
    <tbody></tbody>
  </table>
  <script src="csv-table-with-filters.js"></script>
</body>
</html>


// Get the CSV data
const csvData = await fetch("csv-file.csv").then(response => response.text());

// Parse the CSV data
const csvDataParsed = Papa.parse(csvData);

// Create the table header
const csvTable = document.getElementById("csv-table");
const thead = csvTable.querySelector("thead");
const tr = document.createElement("tr");
for (const columnHeader of csvDataParsed.meta.fields) {
  const th = document.createElement("th");
  th.textContent = columnHeader;
  tr.appendChild(th);
}
thead.appendChild(tr);

// Create the filters
const filtersDiv = document.getElementById("filters");
for (const columnHeader of csvDataParsed.meta.fields) {
  const filterInput = document.createElement("input");
  filterInput.type = "text";
  filterInput.placeholder = `Filter by ${columnHeader}`;
  filtersDiv.appendChild(filterInput);
}

// Add filters to the table
const filterInputs = filtersDiv.querySelectorAll("input");
for (const filterInput of filterInputs) {
  filterInput.addEventListener("input", function() {
    filterTable();
  });
}

function filterTable() {
  const filterValues = {};
  for (const filterInput of filterInputs) {
    const columnHeader = filterInput.placeholder.split("by ")[1];
    const filterValue = filterInput.value.toLowerCase();
    filterValues[columnHeader] = filterValue;
  }

  const rows = tbody.querySelectorAll("tr");
  for (const row of rows) {
    let match = true;
    for (const columnHeader in filterValues) {
      const cellValue = row.querySelector(`td:nth-child(${columnHeader + 1})`).textContent.toLowerCase();
      if (!cellValue.includes(filterValues[columnHeader])) {
        match = false;
        break;
      }
    }

    if (match) {
      row.style.display = "";
    } else {
      row.style.display = "none";
    }
  }
}
