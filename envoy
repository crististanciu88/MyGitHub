apiVersion: networking.istio.io/v1beta1
kind: EnvoyFilter
metadata:
  name: internal-gateway-access-log
  namespace: your-namespace
spec:
  workloadSelector:
    labels:
      istio: your-internal-gateway # Replace with the actual labels for your gateway pods
  configPatches:
  - applyTo: NETWORK_FILTER
    match:
      context: GATEWAY
      proxy:
        proxyVersion: ^1.7.0.* # Replace with your Envoy version if necessary
      listener:
        name: internal-gateway-http
        portNumber: 80
        filterChain:
          filter:
            name: "envoy.filters.network.http_connection_manager"
    patch:
      operation: MERGE
      value:
        access_log:
          - name: "envoy.access_loggers.stdout"
            filter:
              filter_expression: "request.headers['x-envoy-internal'] == 'true'"

```yaml
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: filter-logs
  namespace: aks-istio-ingress
spec:
  workloadSelector:
    labels:
      istio: ingressgateway  # This selects the ingress gateway workloads
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: GATEWAY
      listener:
        filterChain:
          filter:
            name: "envoy.filters.network.http_connection_manager"
    patch:
      operation: INSERT_BEFORE
      value:
        name: "envoy.filters.http.lua"
        typed_config:
          "@type": "type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua"
          inlineCode: |
            function envoy_on_request(request_handle)
              -- Check if the RouteName header is "kubetail"
              local route_name = request_handle:headers():get("x-envoy-original-route-name") -- Use the appropriate header key
              if route_name == "kubetail" then
                -- Prevent logging for this request
                request_handle:headers():replace("x-envoy-access-log", "false")
              end
            end
```
            inline_code: |
              function envoy_on_request(request_handle)
                local requested_server_name = request_handle:streamInfo():requestedServerName()
                if requested_server_name == "logs.rb-dev.azpriv-cloud.net" then
                  -- Skip logging for this request
                  request_handle:logInfo("Request to server name 'logs.rb-dev.azpriv-cloud.net' skipped.")
                  return
                end
                request_handle:logInfo("Logging request: " .. requested_server_name)
              end
