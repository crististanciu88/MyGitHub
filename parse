function Parse-Files {
    [CmdletBinding()]
    param (
        [Parameter(Mandatory = $true, Position = 0)]
        [ValidateScript({Test-Path $_ -PathType 'Container'})]
        [string]$Path
    )

    $FileExtensions = @('.config', '.xml', '.bat')
    $RegexPattern = '\$\{EvaSpace:(.+?),EvaHash:(.+?),EvaSecretName:(.+?)\}'

    function Get-ValueFromFunction($concatenatedString) {
        # Replace this with your own logic to get the desired value based on the concatenated string
        # For demonstration purposes, a sample return value is used
        $returnValue = "SampleValue"
        return $returnValue
    }

    Get-ChildItem -Path $Path -Recurse -Include $FileExtensions |
    ForEach-Object {
        $FilePath = $_.FullName
        $Content = Get-Content -Path $FilePath -Raw

        $Matches = [regex]::Matches($Content, $RegexPattern)
        foreach ($Match in $Matches) {
            $EvaSpace = $Match.Groups[1].Value
            $EvaHash = $Match.Groups[2].Value
            $EvaSecretName = $Match.Groups[3].Value

            $ConcatenatedString = "$EvaSpace/$EvaHash/$EvaSecretName"
            $Value = Get-ValueFromFunction -concatenatedString $ConcatenatedString

            $Replacement = '${EvaSpace:' + $EvaSpace + ',EvaHash:' + $EvaHash + ',EvaSecretName:' + $EvaSecretName + '}'
            $Content = $Content -replace [regex]::Escape($Match.Value), $Value

            Set-Content -Path $FilePath -Value $Content

            # Perform any desired actions with the replaced value
            # For example, display it:
            Write-Host "Replaced value in $FilePath: $Value"
        }
    }
}
