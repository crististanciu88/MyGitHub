function Parse-Files {
    [CmdletBinding()]
    param (
        [Parameter(Mandatory = $true, Position = 0)]
        [ValidateScript({Test-Path $_ -PathType 'Container'})]
        [string]$Path
    )

    $FileExtensions = @('.config', '.xml', '.bat')
    $RegexPattern = '\$\{EncryptValue:(.+?)\}'

    Get-ChildItem -Path $Path -Recurse -Include $FileExtensions |
    ForEach-Object {
        $FilePath = $_.FullName
        $Content = Get-Content -Path $FilePath -Raw

        $Matches = [regex]::Matches($Content, $RegexPattern)
        foreach ($Match in $Matches) {
            $EncryptValue = $Match.Groups[1].Value
            $Values = [regex]::Matches($EncryptValue, '([^,]+?):([^,}]+)')
            $Variables = @{}

            foreach ($Value in $Values) {
                $VariableName = $Value.Groups[1].Value
                $VariableValue = $Value.Groups[2].Value
                $Variables[$VariableName] = $VariableValue
            }

            $Variables['EncryptValue'] = $EncryptValue

            foreach ($Variable in $Variables.GetEnumerator()) {
                New-Variable -Name $Variable.Key -Value $Variable.Value -Scope Script
            }

            # Perform any desired actions with the extracted variables
            # For example, display them:
            Write-Host "Variables extracted from $FilePath:"
            foreach ($Variable in $Variables.GetEnumerator()) {
                Write-Host "$($Variable.Key) = $($Variable.Value)"
            }
            Write-Host
        }
    }
}
