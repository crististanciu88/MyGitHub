function Encrypt-String {
    param(
        [Parameter(Mandatory=$true)]
        [string]$InputString,
        [Parameter(Mandatory=$true)]
        [string]$EncryptionKey
    )
    
    $encryptionKeyBytes = [System.Text.Encoding]::UTF8.GetBytes($EncryptionKey)
    $inputBytes = [System.Text.Encoding]::UTF8.GetBytes($InputString)
    
    $rijndaelManaged = New-Object System.Security.Cryptography.RijndaelManaged
    $rijndaelManaged.Key = $encryptionKeyBytes
    $rijndaelManaged.IV = $encryptionKeyBytes
    $rijndaelManaged.Mode = [System.Security.Cryptography.CipherMode]::CBC
    $rijndaelManaged.Padding = [System.Security.Cryptography.PaddingMode]::PKCS7
    
    $encryptor = $rijndaelManaged.CreateEncryptor()
    
    $memoryStream = New-Object System.IO.MemoryStream
    $cryptoStream = New-Object System.Security.Cryptography.CryptoStream($memoryStream, $encryptor, [System.Security.Cryptography.CryptoStreamMode]::Write)
    
    $cryptoStream.Write($inputBytes, 0, $inputBytes.Length)
    $cryptoStream.FlushFinalBlock()
    
    $result = [System.Convert]::ToBase64String($memoryStream.ToArray())
    
    $cryptoStream.Close()
    $memoryStream.Close()
    
    return $result
}

function Decrypt-String {
    param(
        [Parameter(Mandatory=$true)]
        [string]$EncryptedString,
        [Parameter(Mandatory=$true)]
        [string]$EncryptionKey
    )
    
    $encryptedBytes = [System.Convert]::FromBase64String($EncryptedString)
    $encryptionKeyBytes = [System.Text.Encoding]::UTF8.GetBytes($EncryptionKey)
    
    $rijndaelManaged = New-Object System.Security.Cryptography.RijndaelManaged
    $rijndaelManaged.Key = $encryptionKeyBytes
    $rijndaelManaged.IV = $encryptionKeyBytes
    $rijndaelManaged.Mode = [System.Security.Cryptography.CipherMode]::CBC
    $rijndaelManaged.Padding = [System.Security.Cryptography.PaddingMode]::PKCS7
    
    $decryptor = $rijndaelManaged.CreateDecryptor()
    
    $memoryStream = New-Object System.IO.MemoryStream($encryptedBytes)
    $cryptoStream = New-Object System.Security.Cryptography.CryptoStream($memoryStream, $decryptor, [System.Security.Cryptography.CryptoStreamMode]::Read)
    $streamReader = New-Object System.IO.StreamReader($cryptoStream)
    
    $result = $streamReader.ReadToEnd()
    
    $streamReader.Close()
    $cryptoStream.Close()
    $memoryStream.Close()
    
    return $result
}
